@page "/fetchdata"

@inherits FluxorComponent
@inject IState<WeatherState> _state

<PageTitle>Weather forecast</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>

<MudGrid>
    <MudItem xs="12" sm="12" md="12" Class="d-flex">
        <MudPaper Class="pa-8 d-flex align-center justify-center flex-grow-1" MinHeight="420px">
            @if (_state.Value.isLoading)
            {
               <Loading />
            }
            else
            {
                if (!string.IsNullOrEmpty(_state.Value.error))
                {
                    <MudContainer Class="d-flex align-center flex-column">
                        <MudText Class="mb-8">@_state.Value.error</MudText>
                    </MudContainer>
                }
                else
                {
                    <MudContainer Class="flex-grow-1">
                        <MudTable Items="_state.Value.forecasts" Hover="true" SortLabel="Sort By" Elevation="0">
                            <HeaderContent>
                                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WeatherForecast, object>(x=>x.Date)">Date</MudTableSortLabel></MudTh>
                                <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureC)">Temp. (C)</MudTableSortLabel></MudTh>
                                <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureF)">Temp. (F)</MudTableSortLabel></MudTh>
                                <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.Summary!)">Summary</MudTableSortLabel></MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Date">@context.Date</MudTd>
                                <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
                                <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
                                <MudTd DataLabel="Summary">@context.Summary</MudTd>
                            </RowTemplate>
                            <PagerContent>
                                <MudTablePager PageSizeOptions="new int[]{50, 100}" />
                            </PagerContent>
                        </MudTable>
                    </MudContainer>
                }
            }
        </MudPaper>
    </MudItem>
</MudGrid>


@code {

    [Inject]
    private IDispatcher? Dispatcher { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Dispatcher?.Dispatch(new FetchDataAction());
    }

}
