@inherits FluxorLayout
@inject IState<AppState> AppState
@inject IState<ThemeState> ThemeState
@inject NavigationManager NavigationManager
@inject AuthFacade AuthFacade

<MudThemeProvider IsDarkMode="ThemeState.Value.IsDarkMode" Theme="CurrentTheme"/>
<MudDialogProvider/>    
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>

        <MudText Typo="Typo.h6">@AppState.Value.AppName</MudText>

        <MudSpacer/>
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank"/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank"/>
        <MudTooltip Text="Settings">
            <MudIconButton Icon="@Icons.Material.Filled.Settings" Title="Settings" aria-label="settings" Color="Color.Inherit" OnClick="SettingsDrawerToggle"/>
        </MudTooltip>
    </MudAppBar>

    @*
        LEFT DRAWER
    *@
    <MudDrawer @bind-Open="_isOpenDrawer" ClipMode="DrawerClipMode.Always" Anchor="Anchor.Left" PreserveOpenState Breakpoint="Breakpoint.Md" Elevation="1" Variant="@DrawerVariant.Mini">
        <div class="d-flex align-center justify-space-between px-2 py-4">
            <MudAvatar Color="Color.Tertiary" Variant="Variant.Outlined">
                @if (_isOpenDrawer)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Person" Title="admin@gmail.com"/>
                }

                @if (!_isOpenDrawer)
                {
                    <MudMenu Icon="@Icons.Material.Filled.Person" Color="Color.Tertiary" Dense AnchorOrigin="Origin.TopRight">
                        <MudMenuItem>
                            Profile
                        </MudMenuItem>
                        <MudMenuItem Class="d-flex align-center justify-center" OnClick="SignOut">
                            Logout
                        </MudMenuItem>
                    </MudMenu>
                }
            </MudAvatar>

            @if (_isOpenDrawer)
            {
                <div class="d-flex flex-column justify-start">
                    <MudText Typo="Typo.button" Class="pl-2">Administrator</MudText>
                    <MudMenu Class="d-flex" Label="admin@gmail.com" EndIcon="@Icons.Material.Filled.MoreVert" Dense AnchorOrigin="Origin.TopRight">
                        <MudMenuItem>
                            Profile
                        </MudMenuItem>
                        <MudMenuItem Class="d-flex align-center justify-center" OnClick="SignOut">
                            Logout
                        </MudMenuItem>
                    </MudMenu>
                </div>
            }

        </div>
        <MudDivider FlexItem="true" DividerType="DividerType.FullWidth"/>
        <NavMenu/>
    </MudDrawer>

    @*
        RIGHT DRAWER
    *@
    <MudDrawer @bind-Open="@_isOpenSettingsDrawer" Anchor="Anchor.Right" ClipMode="DrawerClipMode.Never" Elevation="1" Variant="@DrawerVariant.Temporary">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Settings</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <SettingsMenu/>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pa-8">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    bool _isOpenDrawer = true;
    bool _isOpenSettingsDrawer;

    protected override async Task OnInitializedAsync()
    {
        SubscribeToAction<LogoutActionSuccess>(_ => NavigationManager.NavigateTo("/authentication/login"));
        
        await base.OnInitializedAsync();
    }

    private void DrawerToggle()
    {
        _isOpenDrawer = !_isOpenDrawer;
    }

    private void SettingsDrawerToggle()
    {
        _isOpenSettingsDrawer = !_isOpenSettingsDrawer;
    }

    private static MudTheme CurrentTheme => new()
    {
        LayoutProperties = new()
        {
            DrawerWidthRight = "300px",
            DrawerWidthLeft = "250px"
        },
        Palette = new()
        {
            Primary = "#009688",
            PrimaryContrastText = "#fff",
            PrimaryDarken = "#00695C",
            PrimaryLighten = "#4DB6AC",
            Secondary = "#E91E63",
            SecondaryContrastText = "#fff",
            SecondaryDarken = "#AD1457",
            SecondaryLighten = "#F06292",
            Tertiary = "#673AB7",
            TertiaryContrastText = "#fff",
            TertiaryDarken = "#4527A0",
            TertiaryLighten = "#9575CD",
            TextPrimary = "#212121",
            TextSecondary = "#757575",
            TextDisabled = "#BDBDBD",
            AppbarText = "#FAFAFA",
            AppbarBackground = "#009688",
            DrawerText = "#212121",
            Background = "#F5F5F5",
        },
        PaletteDark = new()
        {
            Primary = "#009688",
            PrimaryContrastText = "#fff",
            PrimaryDarken = "#00695C",
            PrimaryLighten = "#4DB6AC",
            Secondary = "#E91E63",
            SecondaryContrastText = "#fff",
            SecondaryDarken = "#AD1457",
            SecondaryLighten = "#F06292",
            Tertiary = "#673AB7",
            TertiaryContrastText = "#fff",
            TertiaryDarken = "#4527A0",
            TertiaryLighten = "#9575CD",
            TextPrimary = "#9E9E9E",
            TextSecondary = "#BDBDBD",
            TextDisabled = "#E0E0E0",
            AppbarText = "#FAFAFA",
            AppbarBackground = "#009688",
        }
    };

    private void SignOut()
    {
        AuthFacade.Logout();
    }
}