@inherits FluxorLayout
@inject IState<AppState> AppState
@inject IState<ThemeState> ThemeState
@inject NavigationManager NavigationManager
@inject AppFacade AppFacade

<MudThemeProvider IsDarkMode="ThemeState.Value.IsDarkMode" Theme="ThemeState.Value.CurrentTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@DrawerToggle"/>

        @if (!AppState.Value.IsLeftMenuOpen)
        {
            <MudText Typo="Typo.h6">@AppState.Value.AppName</MudText>
        }
        <MudSpacer/>
        <MudContainer Class="gap-2 d-flex flex-row justify-end">
            <MudHidden Breakpoint="Breakpoint.Xs">
                <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor"
                               Color="Color.Inherit"
                               Link="https://mudblazor.com/"
                               Target="_blank"/>

                <MudIconButton Icon="@Icons.Custom.Brands.GitHub"
                               Color="Color.Inherit"
                               Link="https://github.com/MudBlazor/MudBlazor/"
                               Target="_blank"/>
            </MudHidden>

            <MudTooltip Text="Settings">
                <MudIconButton Icon="@Icons.Material.Filled.Settings"
                               Title="Settings" aria-label="settings"
                               Color="Color.Inherit"
                               OnClick="SettingsDrawerToggle"/>
            </MudTooltip>

            <UserAvatar/>

        </MudContainer>
    </MudAppBar>

    <MudDrawer
        @bind-Open="AppState.Value.IsLeftMenuOpen"
        ClipMode="DrawerClipMode.Never"
        Anchor="Anchor.Left"
        PreserveOpenState="true"
        Elevation="3"
        Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">@AppState.Value.AppName</MudText>
        </MudDrawerHeader>
        <NavMenu/>
        <MudSpacer/>
        <MudText Align="Align.Center">Version: @AppState.Value.AppVersion</MudText>
    </MudDrawer>

    <MudDrawer @bind-Open="@_isOpenSettingsDrawer"
               Anchor="Anchor.Right"
               ClipMode="DrawerClipMode.Never"
               Elevation="1"
               Variant="@DrawerVariant.Temporary">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Settings</MudText>
        </MudDrawerHeader>

        <SettingsNavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pa-8">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    private bool _isOpenDrawer = true;
    private bool _isOpenSettingsDrawer;

    protected override async Task OnInitializedAsync()
    {
        SubscribeToAction<LogoutActionSuccess>(action =>
            NavigationManager
                .NavigateTo($"/authentication/login?returnUrl={action.ReturnUrl}"));

        await base.OnInitializedAsync();
    }

    private void DrawerToggle()
        => AppFacade.ToggleLeftMenu();

    private void SettingsDrawerToggle()
        => _isOpenSettingsDrawer = !_isOpenSettingsDrawer;

}